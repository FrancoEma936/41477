//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CSubset.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="CSubsetParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface ICSubsetListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.instrucciones"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstrucciones([NotNull] CSubsetParser.InstruccionesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.instrucciones"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstrucciones([NotNull] CSubsetParser.InstruccionesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstruccion([NotNull] CSubsetParser.InstruccionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstruccion([NotNull] CSubsetParser.InstruccionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.decision"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecision([NotNull] CSubsetParser.DecisionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.decision"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecision([NotNull] CSubsetParser.DecisionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSentencia([NotNull] CSubsetParser.SentenciaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSentencia([NotNull] CSubsetParser.SentenciaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.salida"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSalida([NotNull] CSubsetParser.SalidaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.salida"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSalida([NotNull] CSubsetParser.SalidaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.terminar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerminar([NotNull] CSubsetParser.TerminarContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.terminar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerminar([NotNull] CSubsetParser.TerminarContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.condicion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondicion([NotNull] CSubsetParser.CondicionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.condicion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondicion([NotNull] CSubsetParser.CondicionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.cadena"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCadena([NotNull] CSubsetParser.CadenaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.cadena"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCadena([NotNull] CSubsetParser.CadenaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.caracteres"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaracteres([NotNull] CSubsetParser.CaracteresContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.caracteres"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaracteres([NotNull] CSubsetParser.CaracteresContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.caracter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaracter([NotNull] CSubsetParser.CaracterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.caracter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaracter([NotNull] CSubsetParser.CaracterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSubsetParser.simbolo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimbolo([NotNull] CSubsetParser.SimboloContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSubsetParser.simbolo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimbolo([NotNull] CSubsetParser.SimboloContext context);
}
